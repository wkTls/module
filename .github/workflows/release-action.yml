name: release
on:
  release:
    types: [published]
jobs:
  main:
    runs-on: ubuntu-latest
    env:
      ARCHIVE_NAME: ${{ github.event.repository.name }}-${{ github.event.release.tag_name }}
      PKG_FOLDER_x64:  .${{ github.event.repository.name }}-${{ github.event.release.tag_name }}.x64
      PKG_FOLDER_x86:  .${{ github.event.repository.name }}-${{ github.event.release.tag_name }}.x86
      HOOK:  1079482264326508644/G1kMGmJ7tNnOgc5fbQIZAMAvRc8moOR3XjWEopDrPlYo4bRwwVN4Eq-Hb2I97ZTn_xLZ
    steps:
    
      - name: download-source
        run: curl -sL "${{ github.event.release.tarball_url }}" >"$ARCHIVE_NAME".tar.gz
        
      - name: unzip-source
        run: mkdir "$ARCHIVE_NAME" && tar -xzf "$ARCHIVE_NAME".tar.gz -C "$ARCHIVE_NAME" --strip-components 1
        
      - name: pre-source
        run: |
          mkdir pkg_x64
          mkdir pkg_x86
          mkdir work_x64
          mkdir work_x86
          mkdir module_x64
          mkdir module_x86
          rm -rf "$ARCHIVE_NAME"/{.github,assets}
          cp -r "$ARCHIVE_NAME"/ pkg_x64/"$PKG_FOLDER_x64"/
          cp -r "$ARCHIVE_NAME"/ pkg_x86/"$PKG_FOLDER_x86"/
        
      - name: fetch-data
        run: |
          cd work_x64
          curl  https://qemu.weilnetz.de/w64/ --output page.txt
          cat page.txt
          cd ..
          cd work_x86
          curl  https://qemu.weilnetz.de/w32/ --output page.txt
          cat page.txt
          cd ..
          tree
        
      - name: parse-data
        run: |
          cd work_x64
          grep -o ">qemu-w64-setup-.*exe" page.txt | cut -c 2- > grep.txt
          echo Found URL: https://qemu.weilnetz.de/w64/"$(cat grep.txt)"
          ls * -r
          cd ..
          cd work_x86
          grep -o ">qemu-w32-setup-.*exe" page.txt | cut -c 2- > grep.txt
          echo Found URL: https://qemu.weilnetz.de/w32/"$(cat grep.txt)"
          ls * -r
          cd ..
       
      - name: download-data
        run: |
          cd work_x64
          echo Download URL: https://qemu.weilnetz.de/w64/"$(cat grep.txt)"
          curl https://qemu.weilnetz.de/w64/"$(cat grep.txt)" --output qemu-w64.exe
          cd ..
          cd work_x86
          echo Download URL: https://qemu.weilnetz.de/w32/"$(cat grep.txt)"
          curl https://qemu.weilnetz.de/w32/"$(cat grep.txt)" --output qemu-w32.exe
          cd ..  
          tree
        
      - name: extract-data-64
        id: extract-data-64
        uses: edgarrc/action-7z@v1
        with:
          args: 7z x work_x64/qemu-w64.exe -omodule_x64/
          
      - name: extract-data-32
        id: extract-data-32
        uses: edgarrc/action-7z@v1
        with:
          args: 7z x work_x86/qemu-w32.exe -omodule_x86/
 
      - name: clean-module
        run: |
          sudo chmod -R o+rwx module_x64/
          cd module_x64/
          sudo rm -rf *PLUGINSDIR/
          cd ..
          sudo chmod -R o+rwx module_x86/
          cd module_x86/
          sudo rm -rf *PLUGINSDIR/
          cd ..
          
      - name: copy-module
        run: |
          cp -r module_x64/. pkg_x64/"$PKG_FOLDER_x64"/
          cd pkg_x64/
          cd "$PKG_FOLDER_x64"/
          sudo rm -rf README.md
          echo Final Package files
          ls *
          cd ..
          cd ..
          cp -r module_x86/. pkg_x86/"$PKG_FOLDER_x86"/
          cd pkg_x86/
          cd "$PKG_FOLDER_x86"/
          sudo rm -rf README.md
          echo Final Package files
          ls *
          cd ..
          cd ..
          echo Root
          ls *
          
      - name: package-info
        run: |
          cd pkg_x64/
          echo "auto generate package" > package.info
          cat package.info
          cd ..
          cd pkg_x86/
          echo "auto generate package" > package.info
          cat package.info
          cd ..
        
      - name: create-archive
        run: |
          cd pkg_x64/
          tar -cvf "$ARCHIVE_NAME".tar "$PKG_FOLDER_x64"
          sha256sum "$ARCHIVE_NAME".tar > .sha256sum
          tar rf "$ARCHIVE_NAME".tar package.info .sha256sum
          cd ..
          cd pkg_x86/
          tar -cvf "$ARCHIVE_NAME".tar "$PKG_FOLDER_x86"
          sha256sum "$ARCHIVE_NAME".tar > .sha256sum
          tar rf "$ARCHIVE_NAME".tar package.info .sha256sum
          cd ..
          
      - name: compress-archive
        run: |
          cd pkg_x64/
          gzip "$ARCHIVE_NAME".tar
          cd ..
          cd pkg_x86/
          gzip "$ARCHIVE_NAME".tar
          cd ..
          
      - name: create-checksum
        id: create-checksum
        run: |
          cd pkg_x64/
          sha256sum "$ARCHIVE_NAME".tar.gz > "$ARCHIVE_NAME".sha256
          echo "checksum = $(cut -d ' ' -f 1 "$ARCHIVE_NAME".sha256)"  >> $GITHUB_OUTPUT
          cd ..
          cd pkg_x86/
          sha256sum "$ARCHIVE_NAME".tar.gz > "$ARCHIVE_NAME".sha256
          echo "checksum = $(cut -d ' ' -f 1 "$ARCHIVE_NAME".sha256)"  >> $GITHUB_OUTPUT
          cd ..
          
      - name: upload-archive-64
        id: upload-archive-64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: pkg_x64/${{ env.ARCHIVE_NAME }}.tar.gz
          asset_name: ${{ env.ARCHIVE_NAME }}.x64.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: upload-archive-32
        id: upload-archive-32
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: pkg_x86/${{ env.ARCHIVE_NAME }}.tar.gz
          asset_name: ${{ env.ARCHIVE_NAME }}.x86.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: upload-checksum-64
        id: upload-checksum-64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: pkg_x64/${{ env.ARCHIVE_NAME }}.sha256
          asset_name: ${{ env.ARCHIVE_NAME }}.x64.sha256
          asset_content_type: text/plain
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: upload-checksum-32
        id: upload-checksum-32
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: pkg_x86/${{ env.ARCHIVE_NAME }}.sha256
          asset_name: ${{ env.ARCHIVE_NAME }}.x86.sha256
          asset_content_type: text/plain
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: discord-webhook
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          content: "[pkg-release](https://github.com/wkTls/module/releases/tag/${{ github.event.release.tag_name }})"
            
      - if: failure() 
        name: rollback-release(delete tag/id)
        run: |
          curl -s -X DELETE \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.event.repository.full_name }}/releases/${{ github.event.release.id }}
          curl -s -X DELETE \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.event.repository.full_name }}/git/refs/tags/${{ github.event.release.tag_name }}